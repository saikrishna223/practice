sudo su -(login to root directory)
mkdir git(to make a directory named git)
cd git(to create directory)
apt-get install git(to install git)
git init(to initiate local repository)
touch one.txt(to create a file of name one)
git add .(to add file into staging)
git commit -m "added one.txt file"(to commit to local repository)
git status(to see if changes are comitted)
ls(to see list of items)
git log(to see how many files are added)
git config --global user.name "SK"(to change user name)
git config --global user.email krishna.sk223@gmail.com(to change email)
(/the hexadecimal code is known as sha code. It is the version of the file and it also known as commit code/)
git log --pretty=oneline(to see only sha code or commit code and the messsage being passed)
git show HEAD(head will be pointing to the latest commit)
git reset --hard shacode(to change the head to other)
git fsck --lost-found(to find the dangling around sha code)
git branch(to see master or feature branch)
git branch sk(to create feature branch of name sk in local repository)
git checkout sk(if we want to switch to feature branch named sk)
git merge sk(to merge feature branch named sk to master branch)
git branch -d sk(to delete a branch named sk)
git commit -a -m "directly modified without commit"(to directly commit s file without adding it to staging and it is only possible for modified file)
rm a.txt(to remove file named a.txt)
git diff oneshacode..anothershacode(to see the changes between two files)
git rebase sk(to rebase feature branch named sk to master and in rebase files will be combined to master and it can be used like merge command)
git remote add origin https://github.com/saikrishna223/practice.git(to connect to remote repository)
git push -u origin master(to push to remote repository)
git pull(to pull files from remote repository and it does both fetch and merge commands)
git fetch(to fetch the files from remote repository but it does not merge)
git merge origin/master(to merge file after fetch command)
git tag v1.1(to add a tag of name v1.1)
git tag(to check all the tags)
git push origin --tags(to push tage to remote repository)
git clone --branch v1.1 https://github.com/saikrishna223/practice.git(to clone files present in a particular tag)
git stash(to send a file into stashing area and it is send without commit)
git stash list(to see all the files in the stashing area)
git stash pop stash@{0}(to bring the file of stash@{0} to staging area from stashing area)
git reset one.txt
git stash --keep-index(to send only one file out of many files to stashing area run these both commands)
git stash show -p stash@{0}(to see what files are present in stashing area in stash@{0})
git rm a.txt(to remove a file names a.txt from local copy as well as local repository)
git rm --cached a.txt(to remove file named a.txt only from local repository but not from local copy)
touch .gitignore(to ignore any file create .gitignore file using touch and using pico .gitignore write the file names in it that you want to ignore)
rm a.txt
git commit -a(when we remove a file using only rm command then we need to use these two commands)






